volumes:
  sclaus-postgres-data:
    driver: local

  sclaus-kafka-data:
    driver: local

services:
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.7.1
  #   hostname: sclaus-zookeeper
  #   restart: unless-stopped
  #   ports:
  #     - "127.0.0.1:32001:2181"
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000

  # kafka:
  #   image: confluentinc/cp-kafka:7.7.1
  #   hostname: sclaus-kafka
  #   restart: unless-stopped
  #   ports:
  #     - "127.0.0.1:32002:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_NUM_PARTITIONS: 3
  #   volumes:
  #     - sclaus-kafka-data:/var/lib/kafka/data
  #   depends_on:
  #     zookeeper:
  #       condition: service_started

  # kafka-ui:
  #   image: provectuslabs/kafka-ui:v0.7.2
  #   hostname: sclaus-kafka-ui
  #   restart: unless-stopped
  #   ports:
  #     - "127.0.0.1:32003:8080"
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
  #     KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  #   depends_on:
  #     kafka:
  #       condition: service_started

  #     zookeeper:
  #       condition: service_started

  postgres:
    image: postgres:15.4
    hostname: sclaus-postgres
    restart: unless-stopped
    ports:
      - "127.0.0.1:32004:5432"
    environment:
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DATABASE:-sclaus}
    volumes:
      - sclaus-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${PG_USERNAME} -d ${PG_DATABASE:-sclaus}'",
        ]
      interval: 30s
      timeout: 60s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:7.7
    hostname: sclaus-pgadmin
    restart: unless-stopped
    ports:
      - "127.0.0.1:32005:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USERNAME}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy

  server:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    hostname: sclaus-server
    restart: unless-stopped
    ports:
      - "127.0.0.1:32006:8080"
    environment:
      ENV: ENV
    depends_on:
      kafka:
        condition: service_started

      postgres:
        condition: service_healthy
